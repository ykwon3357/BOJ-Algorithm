from collections import deque

n, m = map(int, input().split())
matrix = [list(map(int, input().split())) for _ in range(n)]

dx = [-1,1,0,0]
dy = [0,0,-1,1]

virus = []
# 바이러스 위치 저장
for i in range(n):
    for j in range(m):
        if matrix[i][j] == 2:
            virus.append((i,j))
ans = 0
# 벽 세우기
def wall(cnt):
    global ans
    if cnt == 3: # 벽 3개면
        safe_area = bfs() # 안전영역 최대값 구함
        if safe_area > ans:
            ans = safe_area
        return
    for i in range(n):
        for j in range(m):
            if matrix[i][j] == 0:
                matrix[i][j] = 1
                wall(cnt + 1)
                matrix[i][j] = 0

# 바이러스 뿌리고 안전영역 구함
def bfs():
    matrix_copy = [[0]*m for _ in range(n)] # 맵 복사
    for i in range(n):
        for j in range(m):
            matrix_copy[i][j] = matrix[i][j]
    q = deque(virus)
    while q:
        x, y = q.popleft()

        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]

            if 0 <= nx < n and 0 <= ny < m and matrix_copy[nx][ny] == 0:
                matrix_copy[nx][ny] = 2
                q.append((nx,ny))

    safe_area = 0   # 안전 영역 구함         
    for i in range(n):
        for j in range(m):
            if matrix_copy[i][j] == 0:
                safe_area += 1
    return safe_area
    
wall(0)
print(ans)