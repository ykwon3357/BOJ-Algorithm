'''
90분
1차원으로만 규칙을 찾으려니 도저히 안보임
2차원으로 생각해야되는 문제

d[n]: n 만들때 뒤가 1, 2, 3으로 끝나는 경우의 수
d[1] =         [0, 1, 0, 0]
d[2] =         [0, 0, 1, 0]
d[3] =         [0, 1, 1, 1]

4장일 경우 
4만들때 뒤가 1인경우 = 3만들 때 뒤가 2인경우 + 3인경우
d[4][1] = d[3][2] + d[3][3] 
d[4][2] = d[2][1] + d[2][3] 
d[4][3] = d[1][1] + d[3][2] 

d[n][1] = d[n-1][2] + d[n-1][3]
d[n][2] = d[n-2][1] + d[n-1][3]
d[n][3] = d[n-3][1] + d[n-1][2]
'''
t = int(input())
num = [int(input()) for _ in range(t)]

d = [[0]*4 for _ in range(max(num)+1)]
d[1] = [0, 1, 0, 0]
d[2] = [0, 0, 1, 0]
d[3] = [0, 1, 1, 1]

for i in range(4, max(num)+1):
    d[i][1] = (d[i - 1][2] + d[i - 1][3]) % 1000000009
    d[i][2] = (d[i - 2][1] + d[i - 2][3]) % 1000000009
    d[i][3] = (d[i - 3][1] + d[i - 3][2]) % 1000000009

for n in num:
    print(sum(d[n])%1000000009)