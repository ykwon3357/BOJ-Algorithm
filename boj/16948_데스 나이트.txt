'''
10m
(r-2, c-1), (r-2, c+1), (r, c-2), (r, c+2), (r+2, c-1), (r+2, c+1)
'''
from collections import deque

n = int(input())
r1, c1, r2, c2 = map(int, input().split())
visited = [[0]*n for _ in range(n)]

q = deque()
q.append((r1, c1, 0)) # 출발점, 이동횟수
visited[r1][c1] = 1
dx = [-2,-2,0,0,2,2]
dy = [-1,1,-2,2,-1,1]
def bfs():
    while q:
        x, y, depth = q.popleft()
        if x == r2 and y == c2:
            print(depth)
            return

        for i in range(6):
            nx = x + dx[i]
            ny = y + dy[i]

            if nx < 0 or nx >= n or ny < 0 or ny >= n:
                continue
            
            if not visited[nx][ny]:
                visited[nx][ny] = 1
                q.append((nx, ny, depth+1))
    print(-1)

bfs()