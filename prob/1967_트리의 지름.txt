'''
20m
임의노드에서 가장 가중치가 큰 노드 찾고
그 노드에서 한번 더 찾음
위 두 노드 사이가 트리의 지름
'''
from collections import deque
import sys

n = int(sys.stdin.readline().rstrip())
graph = [[] for _ in range(n+1)]
for _ in range(n-1):
    parent, child, cost = map(int, sys.stdin.readline().rstrip().split())

    graph[parent].append((child, cost))
    graph[child].append((parent, cost))

def bfs(start):
    q = deque()
    q.append((start, 0))
    dist = [-1]*(n+1)
    dist[start] = 0

    while q:
        v, nowCost = q.popleft()

        for i, newCost in graph[v]:
            if dist[i] == -1:
                dist[i] = newCost + nowCost
                q.append((i, dist[i]))
    ans = max(dist)
    idx = dist.index(ans)
    return ans, idx

ans = bfs(1)[1] # 임의노드에서 가장 가중치가 큰 노드
ans = bfs(ans)[0] # 위 노드에서 가장 가중치가 큰 노드와의 거리 = 트리 지름
print(ans)
