# 30m

n = int(input())
nArr = list(map(int, input().split()))
op = list(map(int, input().split()))
maxRes, minRes = int(-1e9), int(1e9)
def dfs(k,p,s,m,d,res):
    global maxRes, minRes
    if k == n:
        maxRes = max(maxRes, res)
        minRes = min(minRes, res)
        return
    
    if p:
        dfs(k+1, p-1, s, m, d, res + nArr[k])
    if s:
        dfs(k+1, p, s-1, m, d, res - nArr[k])
    if m:
        dfs(k+1, p, s, m-1, d, res * nArr[k])
    if d:
        dfs(k+1, p, s, m, d-1, int(res / nArr[k]))

dfs(1, op[0], op[1], op[2], op[3], nArr[0])
print(maxRes)
print(minRes)