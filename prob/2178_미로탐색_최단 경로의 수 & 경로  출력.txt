'''
4 6
101111
101010
101011
111011
4 6
110110
110110
111111
111101
4 6
101111
101011
101011
111011
최단 경로의 수 찾기 & 경로 출력
'''
n, m = map(int, input().split())
maze = [list(map(int, list(input()))) for _ in range(n)]

visited = [[0]*m for _ in range(n)]
dx = [0,0,-1,1]
dy = [-1,1,0,0]
cnt = 0

def dfs(x,y,depth):
    global cnt

    if x == n-1 and y == m-1 and depth == minDist:
        cnt += 1
        # 최단 경로 출력
        for v in visited:
            print(*v)
        print()
        return

    for i in range(4):
        nx = x + dx[i]
        ny = y + dy[i]
        # 미로 벗어나거나 0일때는 스킵
        if nx < 0 or nx >= n or ny < 0 or ny >= m or maze[nx][ny] == 0 or visited[nx][ny]:
            continue
        visited[nx][ny] = 1
        dfs(nx, ny, depth+1)
        visited[nx][ny] = 0   
    return

def bfs(x, y):
    q = [(x, y)]

    while q:
        x, y = q.pop(0)
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            # 미로 벗어나거나 0일때는 스킵
            if nx < 0 or nx >= n or ny < 0 or ny >= m or maze[nx][ny] == 0:
                continue
            if maze[nx][ny] == 1: # 첫 방문일시 최단거리 갱신
                maze[nx][ny] = maze[x][y] + 1
                q.append((nx, ny))

    return maze[n-1][m-1]

minDist = bfs(0,0)
dfs(0,0,1)
print(cnt)