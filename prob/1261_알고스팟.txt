# 100m
# 숨바꼭질3 문제 처럼 deque 활용
# 벽 없는 방으로 이동할땐 비용이 0 이니 appendleft
from collections import deque

m, n = map(int, input().split())
maze = [list(map(int, list(input()))) for _ in range(n)]
queue = deque()
queue.append((0,0))

dist = [[-1]*m for _ in range(n)]
dist[0][0] = 0
dx = [0,0,-1,1]
dy = [-1,1,0,0]
cnt = 0
while queue:
    x, y = queue.popleft()

    if x == n-1 and y == m-1:
        break

    for i in range(4):
        nx = x + dx[i]
        ny = y + dy[i]

        if 0 <= nx < n and 0 <= ny < m and dist[nx][ny] == -1:           
            if maze[nx][ny] == 0: # 벽 없으면
                dist[nx][ny] = dist[x][y]
                queue.appendleft((nx, ny))
            else: # 벽이면
                dist[nx][ny] = dist[x][y] + 1
                queue.append((nx, ny))

print(dist[n-1][m-1])