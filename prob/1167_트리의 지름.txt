# 120m
'''
아무 노드에서 최대거리인 노드 a 찾고 그 노드에서 최대 거리있는 노드 b 찾으면
a ~ b 사이가 트리 지름
'''
from collections import deque 
import sys

n = int(sys.stdin.readline().rstrip())
graph = [[] for _ in range(n+1)] 
for _ in range(n):
    data = list(map(int, sys.stdin.readline().rstrip().split()))
    for i in range(1, len(data)-1, 2):
        graph[data[0]].append((data[i], data[i+1])) # (노드, 거리)

def bfs(start):
    q = deque()
    q.append((start, 0))
    dist = [-1]*(n+1) # 거리 저장할 배열
    dist[start] = 0
    while q:
        v, nowDist = q.popleft()
        
        for i, newDist in graph[v]:
            if dist[i] == -1:
                dist[i] = newDist + nowDist 
                q.append((i, dist[i]))
    ans = max(dist) # 최대거리
    idx = dist.index(ans) # 최대거리인 노드 인덱스
    return ans, idx

ans = bfs(1)[1] # 아무 노드에서 최대거리인 노드 찾아서
ans = bfs(ans)[0] # 그 노드와 최대거리인 노드의 거리
print(ans)