# 90분 소요. 테케3처럼 익은 토마토 여러개일 경우 어디서부터 어떻게 탐색해야되나 고민하느라 시간많이 잡아먹음
# => 그냥 익은토마토위치를 미리 탐색해서 큐에 넣어주고 bfs 돌리면 되는 거였음 (생각을 좀만 바꾸면 되는거였는데 한가지 틀에 갇히지말자)
# 그 후 반례 못찾아서 계속 실패하느라 더 오래걸림..
# 계속 틀리는데 나중에 다시 확인해볼 것
# => 반례: 익은 토마토 하나도 없을때
# 전부 0일때 -1을 2번출력함 => 출력부분 2중 for문 한번에 빠져나오도록 수정
from collections import deque

m, n = map(int, input().split())

box = [list(map(int, input().split())) for _ in range(n)]
q = deque()
for i in range(n):
    for j in range(m):
        if box[i][j] == 1: # 익은 토마토 좌표 큐에 추가
            q.append((i,j))

dx = [0,0,-1,1]
dy = [-1,1,0,0]
while q:
    x, y = q.popleft()

    for i in range(4):
        nx = x + dx[i]
        ny = y + dy[i]
        # nx, ny가 인덱스 범위 내, 안익은 토마토 일경우
        if 0 <= nx < n and 0 <= ny < m and box[nx][ny] == 0: 
            box[nx][ny] = box[x][y] + 1
            q. append((nx, ny))

ans = 0
for tomatos in box:
    for tomato in tomatos:
        if tomato == 0: # 안 익은 토마토 있을 경우 -1출력 후 종료
            ans = -1
            print(ans)
            break
        if ans < tomato:
            ans = tomato
    if ans == -1:
        break
else:
    if ans == 1: # 처음부터 모두 익어있으면 0출력
        print(0)
    else:
        print(ans-1)
