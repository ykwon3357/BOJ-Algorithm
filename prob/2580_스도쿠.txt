import java.util.Scanner;

public class Main {
	 
	public static int[][] arr = new int[9][9];
 
	public static void main(String[] args) {
 
		Scanner sc = new Scanner(System.in);
 
		for (int i = 0; i < 9; i++) {
			for (int j = 0; j < 9; j++) {
				arr[i][j] = sc.nextInt();
			}
		}
 
		sudoku(0, 0);
 
	}
	
	public static void sudoku(int row, int col) {
		// 열 다 채우면 다음행으로
		if (col == 9) {
			sudoku(row+1, 0);
			return;
		}
		
		// 행 다 채우면 출력 후 종료
		if (row == 9) {
			for (int i=0;i<9;i++) {
				for (int j=0;j<9;j++) {
					System.out.print(arr[i][j]+" "); 
				}
				System.out.println();
			}
			System.exit(0);
		}
		
		if (arr[row][col] == 0) {
			for (int i=1; i<=9; i++) {
				if (possible(row,col,i)) {
					arr[row][col] = i;
					sudoku(row, col+1);
				}
			}
			arr[row][col] = 0;
			return;
		}
		sudoku(row, col+1);
		
	}
	
	public static boolean possible(int row, int col, int num) {
		
		// 같은 행에 겹치는게 있는지
		for (int i=0; i<9; i++) {
			if (arr[row][i] == num) {
				return false;
			}
		}
		
		// 같은 열에 겹치는게 있는지
		for (int i=0; i<9; i++) {
			if (arr[i][col] == num) {
				return false;
			}
		}
		
		// 3*3칸에 겹치는게 있는지
		int new_row = (row/3)*3;
		int new_col = (col/3)*3;
		for (int i=new_row; i<new_row+3; i++) {
			for (int j=new_col; j<new_col+3; j++) {
				if (arr[i][j] == num) {
					return false;
				}
			}
		}
		
		// 위 다 통과할경우 가능한 숫자
		return true;
	}
 
}